/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package waroeng;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author indra
 */
public class DaftarPenjualanPanel extends javax.swing.JPanel {

    final String simpan = "Simpan";
    final String tambah = "Tambah";
    final String ubah = "Ubah";
    Connection connection;
    DetailPenjualanFrame detailPenjualanFrame;
    DefaultTableModel tableModel;
    int selectedRow;
    Integer selectedIDPenjualan;
    String selectedWaktuPenjualan;

    /**
     * Creates new form NewJPanel
     */
    public DaftarPenjualanPanel() {
        initComponents();
        detailPenjualanFrame = new DetailPenjualanFrame();
        tableModel = new DefaultTableModel(new String[]{"ID", "Waktu", "Total"}, 0);
        daftarPenjualanTable.setModel(tableModel);
        daftarPenjualanTable.getColumnModel().getColumn(1).setPreferredWidth(10);
        loadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tablePopupMenu = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jScrollPane3 = new javax.swing.JScrollPane();
        daftarPenjualanTable = new javax.swing.JTable();
        hapusDaftarBarangButton = new javax.swing.JButton();
        lihatDetailButton = new javax.swing.JButton();

        jMenuItem1.setText("Lihat detail");

        daftarPenjualanTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID Penjualan", "Waktu", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        daftarPenjualanTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                daftarPenjualanTableMouseClicked(evt);
            }
        });
        daftarPenjualanTable.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                daftarPenjualanTablePropertyChange(evt);
            }
        });
        jScrollPane3.setViewportView(daftarPenjualanTable);

        hapusDaftarBarangButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        hapusDaftarBarangButton.setText("Hapus");
        hapusDaftarBarangButton.setEnabled(false);
        hapusDaftarBarangButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusDaftarBarangButtonActionPerformed(evt);
            }
        });

        lihatDetailButton.setText("Lihat detail barang");
        lihatDetailButton.setEnabled(false);
        lihatDetailButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lihatDetailButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 489, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lihatDetailButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(hapusDaftarBarangButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lihatDetailButton)
                    .addComponent(hapusDaftarBarangButton))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void lihatDetailButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lihatDetailButtonActionPerformed
        if (selectedRow != -1) {
            detailPenjualanFrame.setIdPenjualan(selectedIDPenjualan.toString());
            detailPenjualanFrame.setWaktuPenjualan(selectedWaktuPenjualan);
            detailPenjualanFrame.setVisible(true);
        }
    }//GEN-LAST:event_lihatDetailButtonActionPerformed

    private void daftarPenjualanTablePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_daftarPenjualanTablePropertyChange
        System.out.println(evt.getPropertyName());
        if(evt.getPropertyName().equals("SelectedRow")){
            System.err.println("fdasfasdfasdf");
        }
    }//GEN-LAST:event_daftarPenjualanTablePropertyChange

    private void daftarPenjualanTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_daftarPenjualanTableMouseClicked
        selectedRow = daftarPenjualanTable.getSelectedRow();
        if(selectedRow == -1){
            lihatDetailButton.setEnabled(false);
            hapusDaftarBarangButton.setEnabled(false);
        }else{
            lihatDetailButton.setEnabled(true);
            hapusDaftarBarangButton.setEnabled(true);
            selectedIDPenjualan = (Integer) tableModel.getValueAt(selectedRow, 0);
            selectedWaktuPenjualan = (String) tableModel.getValueAt(selectedRow, 1);
        }
    }//GEN-LAST:event_daftarPenjualanTableMouseClicked

    private void hapusDaftarBarangButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusDaftarBarangButtonActionPerformed
        try {
            Statement statement = DatabaseUtil.getConnection().createStatement();
            String query = "DELETE FROM barangpenjualan WHERE idpenjualan = " + selectedIDPenjualan;
            statement.executeUpdate(query);
            statement.close();
            statement = DatabaseUtil.getConnection().createStatement();
            query = "DELETE FROM penjualan WHERE idpenjualan = " + selectedIDPenjualan;
            statement.executeUpdate(query);
            statement.close();
            tableModel.fireTableDataChanged();
            statement.close();
        } catch (SQLException ex) {
            Logger.getLogger(DaftarPenjualanPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_hapusDaftarBarangButtonActionPerformed

    private void loadData(){
        try {
            Statement statement = DatabaseUtil.getConnection().createStatement();
            String query = "SELECT @a:=penjualan.idpenjualan AS `ID Penjualan`, "
                    + "DATE_FORMAT(waktu, '%d/%m/%Y %H:%i') AS Waktu, "
                    + "(SELECT SUM(hargajual * jumlah) AS Total "
                    + "FROM barangpenjualan, barang "
                    + "WHERE barang.nama = barangpenjualan.barang AND idpenjualan = @a) AS Total "
                    + "FROM penjualan";
            ResultSet resultSet = statement.executeQuery(query);
            while(resultSet.next()){
                Object[] cols = new Object[3];
                cols[0] = resultSet.getInt("ID Penjualan");
                cols[1] = resultSet.getString("Waktu");
                cols[2] = resultSet.getBigDecimal("Total");
                tableModel.addRow(cols);
            }
            tableModel.fireTableDataChanged();
            statement.close();
            resultSet.close();
        } catch (SQLException ex) {
            Logger.getLogger(DaftarPenjualanPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable daftarPenjualanTable;
    private javax.swing.JButton hapusDaftarBarangButton;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton lihatDetailButton;
    private javax.swing.JPopupMenu tablePopupMenu;
    // End of variables declaration//GEN-END:variables
}
